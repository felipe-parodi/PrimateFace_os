[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "primateface"
version = "0.1.0"
description = "A Machine Learning Resource for Automated Face Analysis in Human and Non-human Primates"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Felipe Parodi",    email = "fparodi@upenn.edu"},
    {name = "Jordan Matelsky", email = "jmatelsky@upenn.edu"},
]
maintainers = [
    {name = "Felipe Parodi", email = "fparodi@upenn.edu"},
]
requires-python = ">=3.8"
keywords = ["computer vision", "face detection", "pose estimation", "primates", "deep learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
]

dependencies = [
    "numpy==1.26.4",
    "opencv-python>=4.5.0",
    "pillow>=10.0.0",
    "tqdm>=4.60.0",
    "matplotlib>=3.3.0",
    "scipy>=1.5.0",
    "pandas>=1.1.0",
    "scikit-learn>=0.24.0",
    "json-tricks>=3.15.0",
    "natsort>=7.0.0",
    "pycocotools>=2.0.0",
]

[project.optional-dependencies]
# GUI and YOLO-based tools
gui = [
    "ultralytics>=8.0.0",
    "gradio>=3.0.0",
    "pyngrok>=5.0.0",
]

# MMDetection and MMPose models
#  mmlab = [
#     "mmcv>=2.0.0",
#     "mmdet>=3.0.0",
#     "mmpose>=1.0.0",
#     "mmengine>=0.7.0",
# ]

# DINOv2 features (enhanced)
dinov2 = [
    "transformers==4.36.0",  # Compatible with PyTorch 2.1
    "accelerate==0.25.0",    # Compatible with PyTorch 2.1
    "umap-learn>=0.5.0",
    "plotly>=5.0.0",
    "polars>=0.16.0",
    "psutil>=5.8.0",
]

# DeepLabCut integration
# dlc = [
#     "deeplabcut>=2.3.0",
# ]

# SLEAP integration
# sleap = [
#     "sleap-io>=0.0.13",
# ]

# Landmark converter (optional GNN support)
landmark_gnn = [
    "torch-geometric>=2.0.0",
]

# Documentation tools
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-minify-plugin>=0.7.0",
    "pymdown-extensions>=10.0",
]

# Development tools
dev = [
    "pytest>=6.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.900",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "gdown>=4.0.0",  # For downloading models from Google Drive
]

# Complete installation (excludes framework-specific: mmlab, dlc, sleap)
all = [
    # GUI tools
    "ultralytics>=8.0.0",
    "gradio>=3.0.0",
    "pyngrok>=5.0.0",
    # DINOv2 and transformers
    "transformers>=4.30.0",
    "accelerate>=0.20.0",
    "umap-learn>=0.5.0",
    "plotly>=5.0.0",
    "polars>=0.16.0",
    "psutil>=5.8.0",
    # Landmark converter
    "torch-geometric>=2.0.0",
]

[project.urls]
Homepage = "https://primateface.studio"
Documentation = "https://primateface.studio/docs"
Repository = "https://github.com/PrimateFace/primateface_oss"
"Bug Reports" = "https://github.com/PrimateFace/primateface_oss/issues"
Paper = "https://www.biorxiv.org/content/10.1101/2025.08.12.669927v1"
"Hugging Face" = "https://huggingface.co/datasets/fparodi/PrimateFace"

[tool.setuptools.packages.find]
where = ["."]
include = ["primateface*", "dataset*", "demos*", "dinov2*", "evals*", "gui*", "landmark_converter*"]
exclude = ["tests*", "docs*", "notebooks*"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.txt", "*.md"]